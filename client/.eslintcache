[{"/home/puter/Projects/ERC20Factory/client/src/index.js":"1","/home/puter/Projects/ERC20Factory/client/src/reportWebVitals.js":"2","/home/puter/Projects/ERC20Factory/client/src/Screens/Home.js":"3","/home/puter/Projects/ERC20Factory/client/src/Screens/Deployed.js":"4","/home/puter/Projects/ERC20Factory/client/src/Screens/Help.js":"5","/home/puter/Projects/ERC20Factory/client/src/Screens/Form.js":"6","/home/puter/Projects/ERC20Factory/client/src/Screens/Tokens.js":"7"},{"size":1057,"mtime":1612019684336,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611670671142,"results":"10","hashOfConfig":"9"},{"size":535,"mtime":1612087058569,"results":"11","hashOfConfig":"9"},{"size":303,"mtime":1611679224484,"results":"12","hashOfConfig":"9"},{"size":256,"mtime":1611679251689,"results":"13","hashOfConfig":"9"},{"size":3540,"mtime":1612020052923,"results":"14","hashOfConfig":"9"},{"size":2229,"mtime":1612019658342,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yray69",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/puter/Projects/ERC20Factory/client/src/index.js",[],["33","34"],"/home/puter/Projects/ERC20Factory/client/src/reportWebVitals.js",[],"/home/puter/Projects/ERC20Factory/client/src/Screens/Home.js",["35"],"/home/puter/Projects/ERC20Factory/client/src/Screens/Deployed.js",[],"/home/puter/Projects/ERC20Factory/client/src/Screens/Help.js",[],"/home/puter/Projects/ERC20Factory/client/src/Screens/Form.js",["36","37"],"import React, {useState, useEffect} from 'react';\nimport '../CSS/Form.css';\nimport {\n  Link, Redirect, useHistory \n} from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport back from \"../images/left-arrow.png\";\nimport ERC20FactoryObject from \"../build/contracts/ERC20Factory.json\";\n\n\nconst web3 = new Web3('http://127.0.0.1:8584');\nconst ERC20Factory = new web3.eth.Contract(ERC20FactoryObject.abi, '0x2D2e364AA38BbfF2fCb408E77E9Bb9e59633F853');\n\n\nfunction Form() {\n    const [name, setName] = useState();\n    const [symbol, setSymbol] = useState();\n    const [supply, setSupply] = useState();\n    const [contractProp, setContractProp] = useState();\n    const [contractCreated, setContractCreated] = useState(0);\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        const accounts = await window.ethereum.enable();\n        const account = accounts[0];\n        console.log(account);\n\n        const gas = await ERC20Factory.methods.createChildContract(name,symbol,parseInt(supply)).estimateGas();\n        const createResponse = await ERC20Factory.methods.createChildContract(name,symbol,parseInt(supply)).send(\n            {\n                from: account,\n                gas\n            }\n        );\n        console.log(createResponse);\n        let ev = createResponse.events;\n        console.log(ev.ContractCreated.returnValues.contractAddress); \n        setContractProp(ev.ContractCreated.returnValues.contractAddress);\n        localStorage.setItem('addr', ev.ContractCreated.returnValues.contractAddress);\n        setContractCreated(1);\n\n    }\n\n    if(contractCreated){\n        console.log('Redirecting..')\n        return <Redirect\n            to={{\n            pathname: `/tokens/${contractProp}`,\n            }}\n        />\n    }\n\n    return (\n        <div className=\"formScreen\">\n            <div className=\"backButton\">\n\t\t\t\t<Link to='/'>\n                    <img src={back} alt=\"back button\"/>\n\t\t\t\t</Link>\n\n                <Link to='/' className=\"imgbox\">\n                    <h1>BACK</h1>\n                </Link>\n            </div>\n\n            <div className=\"bodyForm\">\n                <form onSubmit={handleSubmit}>  \n                    <div className=\"single-input\"> \n                        <label>NAME</label>\n                    </div>\n\n                    <div className=\"single-input\">     \n                        <input required type=\"text\" maxLength=\"32\" name=\"name\" onChange={(event) => setName(event.target.value)} value={name}/>\n                    </div>\n\n                    <div className=\"single-input\"> \n                        <label>SYMBOL</label>\n                    </div>\n\n                    <div className=\"single-input\">     \n                        <input required type=\"text\" maxLength=\"6\" name=\"symbol\" onChange={(event) => setSymbol(event.target.value)} value={symbol}/>\n                    </div>\n\n                    <div className=\"single-input\"> \n                        <label>SUPPLY</label>\n                    </div>\n\n                    <div className=\"single-input\">     \n                        <input min=\"1\" max=\"115792089237316195423570985008687907853269984665640564039457584007913129639935\" required type=\"number\" name=\"supply\" onChange={(event) => setSupply(event.target.value)} value={supply}/>\n                    </div>\n\n                    <div className=\"single-input submit\"> \n                        <input type=\"submit\" value=\"SUBMIT\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Form;\n","/home/puter/Projects/ERC20Factory/client/src/Screens/Tokens.js",["38","39","40"],"import React, {useState, useEffect} from 'react';\nimport '../CSS/Tokens.css';\nimport {\n  Link, Redirect, useParams\n} from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport back from \"../images/left-arrow.png\";\nimport ERC20Contract from \"../build/contracts/ERC20.json\";\n\n\n\n\nconst Tokens = () => {\n    \n    const addr = localStorage.getItem('addr');\n    console.log(addr);\n\n    const [name, setName] = useState();\n    const [symbol, setSymbol] = useState();\n    const [supply, setSupply] = useState();\n    const web3 = new Web3('http://127.0.0.1:8584');\n    const ERC20 = new web3.eth.Contract(ERC20Contract.abi, addr);\n\n    useEffect(()=>{\n        loadData();\n    },[])\n\n    \n\n    const loadData = async() => {\n        const nameTemp = await ERC20.methods.name().call();\n        const symbolTemp = await ERC20.methods.symbol().call();\n        const supplyTemp = await ERC20.methods.totalSupply().call();\n\n        setSymbol(symbolTemp);\n        setName(nameTemp);\n        setSupply(supplyTemp);\n        console.log(symbolTemp, nameTemp, supplyTemp);\n    }\n\n    \n    return (\n        <div className=\"tokenScreen\">\n            <div className=\"backButton\">\n\t\t\t\t<Link to='/'>\n                    <img src={back} alt=\"back button\"/>\n\t\t\t\t</Link>\n\n                <Link to='/' className=\"imgbox\">\n                    <h1>BACK</h1>\n                </Link>\n            </div>\n\n            <div className=\"tokenHeading\">\n                <h2>Here's Your Token!</h2>\n            </div>\n\n            <div className=\"tokenBody\">\n                <div className=\"tokenHeader\">\n                    <h1>ERC-20</h1>\n                </div>\n\n              \n                    <div className=\"tokenKey\">\n                        <p>NAME</p>\n                        <p>SYMBOL</p>\n                        <p>SUPPLY</p>\n                        <p>ADDRESS</p>\n                    </div>\n\n                    <div className=\"tokenValue\">\n                        <p>{name}</p>\n                        <p>{symbol}</p>\n                        <p>{supply}</p>\n                        <p className=\"addr\">{addr.slice(0,25)}....</p>\n                    </div>\n\n                \n                \n            </div>\n        </div>\n    );\n}\n\nexport default Tokens;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":2,"nodeType":"47","messageId":"48","endLine":3,"endColumn":6},{"ruleId":"45","severity":1,"message":"49","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"45","severity":1,"message":"50","line":4,"column":19,"nodeType":"47","messageId":"48","endLine":4,"endColumn":29},{"ruleId":"45","severity":1,"message":"51","line":4,"column":9,"nodeType":"47","messageId":"48","endLine":4,"endColumn":17},{"ruleId":"45","severity":1,"message":"52","line":4,"column":19,"nodeType":"47","messageId":"48","endLine":4,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":26,"column":7,"nodeType":"55","endLine":26,"endColumn":9,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [loadData]",{"range":"62","text":"63"},[667,669],"[loadData]"]